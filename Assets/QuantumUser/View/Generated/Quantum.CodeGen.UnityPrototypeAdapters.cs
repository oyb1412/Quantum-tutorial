// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
//
// If you need to extend the classes generated to add
// fields or methods to them, please create partial
// declarations in another file.
// </auto-generated>
#pragma warning disable 0109
#pragma warning disable 1591


namespace Quantum.Prototypes.Unity {
  using Photon.Deterministic;
  using Quantum;
  using Quantum.Core;
  using Quantum.Collections;
  using Quantum.Inspector;
  using Quantum.Physics2D;
  using Quantum.Physics3D;
  using Byte = System.Byte;
  using SByte = System.SByte;
  using Int16 = System.Int16;
  using UInt16 = System.UInt16;
  using Int32 = System.Int32;
  using UInt32 = System.UInt32;
  using Int64 = System.Int64;
  using UInt64 = System.UInt64;
  using Boolean = System.Boolean;
  using String = System.String;
  using Object = System.Object;
  using FlagsAttribute = System.FlagsAttribute;
  using SerializableAttribute = System.SerializableAttribute;
  using MethodImplAttribute = System.Runtime.CompilerServices.MethodImplAttribute;
  using MethodImplOptions = System.Runtime.CompilerServices.MethodImplOptions;
  using FieldOffsetAttribute = System.Runtime.InteropServices.FieldOffsetAttribute;
  using StructLayoutAttribute = System.Runtime.InteropServices.StructLayoutAttribute;
  using LayoutKind = System.Runtime.InteropServices.LayoutKind;
  #if QUANTUM_UNITY //;
  using TooltipAttribute = UnityEngine.TooltipAttribute;
  using HeaderAttribute = UnityEngine.HeaderAttribute;
  using SpaceAttribute = UnityEngine.SpaceAttribute;
  using RangeAttribute = UnityEngine.RangeAttribute;
  using HideInInspectorAttribute = UnityEngine.HideInInspector;
  using PreserveAttribute = UnityEngine.Scripting.PreserveAttribute;
  using FormerlySerializedAsAttribute = UnityEngine.Serialization.FormerlySerializedAsAttribute;
  using MovedFromAttribute = UnityEngine.Scripting.APIUpdating.MovedFromAttribute;
  using CreateAssetMenu = UnityEngine.CreateAssetMenuAttribute;
  using RuntimeInitializeOnLoadMethodAttribute = UnityEngine.RuntimeInitializeOnLoadMethodAttribute;
  #endif //;
  
  [System.SerializableAttribute()]
  public unsafe partial class EnemyComponentPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.EnemyComponentPrototype> {
    public AssetRef<EntityPrototype> AttackBoundPrototype;
    public FP EnemyMoveSpeed;
    public Int32 CurrentEnemyHp;
    public Int32 MaxEnemyHp;
    public FP EnemyAttackSpeed;
    public FP EnemyAttackTimer;
    public FP EnemySpawnDistanceToCenter;
    public FPVector2 ClosestPlayerPos;
    public FPVector2 Direction;
    public Quantum.QEnum32<EnemyState> State;
    public Quantum.QuantumEntityPrototype TargetPlayerEntity;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.EnemyComponentPrototype prototype);
    public override Quantum.Prototypes.EnemyComponentPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.EnemyComponentPrototype();
      converter.Convert(this.AttackBoundPrototype, out result.AttackBoundPrototype);
      converter.Convert(this.EnemyMoveSpeed, out result.EnemyMoveSpeed);
      converter.Convert(this.CurrentEnemyHp, out result.CurrentEnemyHp);
      converter.Convert(this.MaxEnemyHp, out result.MaxEnemyHp);
      converter.Convert(this.EnemyAttackSpeed, out result.EnemyAttackSpeed);
      converter.Convert(this.EnemyAttackTimer, out result.EnemyAttackTimer);
      converter.Convert(this.EnemySpawnDistanceToCenter, out result.EnemySpawnDistanceToCenter);
      converter.Convert(this.ClosestPlayerPos, out result.ClosestPlayerPos);
      converter.Convert(this.Direction, out result.Direction);
      converter.Convert(this.State, out result.State);
      converter.Convert(this.TargetPlayerEntity, out result.TargetPlayerEntity);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class PlayerBoundComponentPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.PlayerBoundComponentPrototype> {
    public Quantum.QuantumEntityPrototype OwnerPlayer;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.PlayerBoundComponentPrototype prototype);
    public override Quantum.Prototypes.PlayerBoundComponentPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.PlayerBoundComponentPrototype();
      converter.Convert(this.OwnerPlayer, out result.OwnerPlayer);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class PlayerComponentPrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.PlayerComponentPrototype> {
    public AssetRef<EntityPrototype> AttackBoundPrototype;
    public PlayerRef PlayerRef;
    public FP PlayerMoveSpeed;
    public Int32 KillCount;
    public Int32 CurrentPlayerHp;
    public Int32 MaxPlayerHp;
    public FP PlayerAttackSpeed;
    public FP PlayerAttackTimer;
    public FPVector2 PlayerDirection;
    public FPVector2 PlayerLastDirection;
    public Quantum.QEnum32<PlayerState> State;
    public FP NotInputTimer;
    public Quantum.QuantumEntityPrototype TargetEnemyEntity;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.PlayerComponentPrototype prototype);
    public override Quantum.Prototypes.PlayerComponentPrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.PlayerComponentPrototype();
      converter.Convert(this.AttackBoundPrototype, out result.AttackBoundPrototype);
      converter.Convert(this.PlayerRef, out result.PlayerRef);
      converter.Convert(this.PlayerMoveSpeed, out result.PlayerMoveSpeed);
      converter.Convert(this.KillCount, out result.KillCount);
      converter.Convert(this.CurrentPlayerHp, out result.CurrentPlayerHp);
      converter.Convert(this.MaxPlayerHp, out result.MaxPlayerHp);
      converter.Convert(this.PlayerAttackSpeed, out result.PlayerAttackSpeed);
      converter.Convert(this.PlayerAttackTimer, out result.PlayerAttackTimer);
      converter.Convert(this.PlayerDirection, out result.PlayerDirection);
      converter.Convert(this.PlayerLastDirection, out result.PlayerLastDirection);
      converter.Convert(this.State, out result.State);
      converter.Convert(this.NotInputTimer, out result.NotInputTimer);
      converter.Convert(this.TargetEnemyEntity, out result.TargetEnemyEntity);
      ConvertUser(converter, ref result);
      return result;
    }
  }
  [System.SerializableAttribute()]
  public unsafe partial class PlayerProjectilePrototype : Quantum.QuantumUnityPrototypeAdapter<Quantum.Prototypes.PlayerProjectilePrototype> {
    public FP TTL;
    public Quantum.QuantumEntityPrototype Owner;
    public AssetRef<PlayerProjectileConfig> ProjectileConfig;
    partial void ConvertUser(Quantum.QuantumEntityPrototypeConverter converter, ref Quantum.Prototypes.PlayerProjectilePrototype prototype);
    public override Quantum.Prototypes.PlayerProjectilePrototype Convert(Quantum.QuantumEntityPrototypeConverter converter) {
      var result = new Quantum.Prototypes.PlayerProjectilePrototype();
      converter.Convert(this.TTL, out result.TTL);
      converter.Convert(this.Owner, out result.Owner);
      converter.Convert(this.ProjectileConfig, out result.ProjectileConfig);
      ConvertUser(converter, ref result);
      return result;
    }
  }
}
#pragma warning restore 0109
#pragma warning restore 1591
